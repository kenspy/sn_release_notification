<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[window.addEventListener("load", initForm, false);

// Show info message on form saved.
function onFormSave() {
    updateEmailTemplate();
    catItemUpdate();

    var grForm = new GlideForm();
    grForm.addInfoMessage('Properties saved!');
}

function initForm() {
    catItemStatus();
}

function catItemStatus() {
    var grRP = new GlideRecord('sc_cat_item_producer');
    grRP.get('0d52777c97a7a110c6d1b666f053afb1');
    var rpStatus = grRP.getValue("active");
    $j("#ci_checkbox")[0].checked = rpStatus;
    // 	var ga = new GlideAjax('ReleaseNotificationUtils');
    // 	ga.addParam("sysparm_name", "setCatalogItem");
    // 	ga.addParam("sysparm_method", "status");
    // 	ga.getXMLAnswer(getResponse);

    // 	function getResponse(answer) {
    // 		console.log(answer);
    // 		$j("#ci_checkbox")[0].checked = answer;
    // 	}

}

function catItemUpdate() {
    // 	var ga = new GlideAjax('ReleaseNotificationUtils');
    // 	ga.addParam("sysparm_name", "setCatalogItem");
    // 	ga.addParam("sysparm_method", "active");
    // 	ga.addParam("sysparm_value", $j("#ci_checkbox")[0].checked);

    // 	var grForm = new GlideForm();
    //     var grRP = new GlideRecord('sc_cat_item_producer');
    //     grRP.addQuery('sys_id', '0d52777c97a7a110c6d1b666f053afb1');
    //     grRP.query();

    //     if (grRP.next()) {
    //         grRP.active = $j("#ci_checkbox")[0].checked;
    //         grRP.update();
    //     }

    //     if ($j("#ci_checkbox")[0].checked) {
    //         grForm.addInfoMessage('Catalog Item is enabled');
    //     } else {
    //         grForm.addInfoMessage('Catalog Item is disabled');
    //     }
}

// function newVersionCheck(current_version) {
//     var ga = new GlideAjax('ReleaseNotificationUtils');
//     ga.addParam("sysparm_name", "newVersionCheck");
//     ga.addParam("sysparm_current_version", current_version);
//     ga.getXMLWait();
//     ga.getXML(portalSuffix);

//     function portalSuffix(response) {
//         var version = response.responseXML.documentElement.getAttribute("answer");
//         return response;
//     }
// }

function releaseNoteList() {
    var path = "sys_choice_list.do?sysparm_query=name%3Dx_803596_release_0_release_notes%5Eelement%3Dnote_type&sysparm_first_row=1&sysparm_view=";
    g_navigation.openPopup(path, 'Release Note Types List', 'resizable,scrollbars,status', true);

}

function releaseNoteNew() {
    var path = "sys_choice.do?sys_id=-1&sysparm_query=name%3Dx_803596_release_0_release_notes%5eelement%3dnote_type";
    g_navigation.openPopup(path, 'Release Note Types', 'resizable,scrollbars,status', true);
}

function availableFor() {
    var path = "user_criteria.do?sys_id=66ff0801976ba110c6d1b666f053af35";
    g_navigation.openPopup(path, 'Release Notification Manager', 'resizable,scrollbars,status', true);
}

function onEmailPreview() {
    var record_id = "e1bbc42197ff6110c6d1b666f053af1a";
    var user_id = "6816f79cc0a8016401c5a33be04be441=";
    var notification_id = "fbf4284997aba110c6d1b666f053afbb";
    var path = "notification_preview_html_body.do?sysparm_record_id=" + record_id + "&sysparm_user_id=" + user_id + "&sysparm_notification_id=" + notification_id;

    g_navigation.openPopup(path, 'Preview email', 'resizable,scrollbars,status', true);
}

function openCatalogItem() {
    var suffix = "sp";
    var ga = new GlideAjax('ReleaseNotificationUtils');
    ga.addParam("sysparm_name", "getPortalSuffix");
    ga.getXML(function(response) {
        var answer = response.responseXML.documentElement.getAttribute('answer');
		alert(answer);
        console.log("=== URL Prefix ===");
		console.log(response.responseXML);

        if (answer) {
			var json = JSON.parse(answer);
            suffix = json.url_suffix;
        }
    });

    var path = suffix + '?id=sc_cat_item&sys_id=0d52777c97a7a110c6d1b666f053afb1';
    g_navigation.open(path, '_blank');
}

function updateEmailTemplate() {
    //     var gr = new GlideRecord('sysevent_email_action');
    //     gr.get('fbf4284997aba110c6d1b666f053afbb');
    //     gr.template = $j("#email_template").val(); // gs.getProperty("x_803596_release_0.release_email_template");
    //     gr.update();
    var ga = new GlideAjax('ReleaseNotificationUtils');
    ga.addParam("sysparm_name", "updateEmailTemplate");
    ga.addParam("sysparm_method", "update");
    ga.addParam("sysparm_template", $j("#email_template").val());

}

function releaseNoteUpdate() {
    var dialog = new GlideDialogWindow('x_803596_release_0_release_note_color');
    dialog.setTitle('Release Notification');
    dialog.setSize(650, 600);
    dialog.render();
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_803596_release_0_properties.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<style>
		body {
			background: rgba(0,0,0,0.05);
		}
		.title {
			width: 80%;
			float: left;
		}
		.title h4 {
			width: 100%;
			float:left
		}
		.title .app_version, 
		.email_template .app_version, 
		.new_version_check .app_version {
			color: #fff;
			padding: 3px 8px;
			border-radius: 5px;
			margin: 0 5px;
			cursor: pointer;
		}
		.row {
			margin-bottom: 20px;
		}
		.card {
			background-color: RGB(var(--now-color_background--primary,var(--now-color--neutral-0,255,255,255,255)));;
			padding: 0 12px 12px;
			border-radius: 8px;
			display: grid;
		}
		.card-title {
			font-weight: 600;
			border-bottom: 1px solid #ddd;
			padding: 12px 0;
		}
		.email_template {
			width: 80%;
			display: inline-block;
		}
		.email_preview {
			width: 20%;
			display: inline-block;
		}
		td#label\.release_note_types {
			display: none;
		}
		textarea#release_note_types {
			border: 1px solid #a1a1a1;
			border-radius: 4px;
			resize: none;
			overflow: hidden;
			overflow-wrap: break-word;
		}
		.option {
			margin-bottom: 15px;
		}
		textarea, input, .email_icon {
			box-shadow: 0 0 0 0 RGBA(var(--now-color--primary-1,30,133,109),.1),inset 0 0 0 0 RGB(var(--now-color--primary-1,30,133,109)),inset 0 0 0 0 RGB(var(--now-color--neutral-0,255,255,255)),inset 0 2px 0 1px RGBA(var(--now-color--neutral-18,22,27,28),.1);
			background: RGB(var(--now-form-field--background-color,var(--now-color_background--primary,var(--now-color--neutral-0,255,255,255))));
		}
		textarea:focus, input:focus, .email_icon:focus {
			box-shadow: inset 0 0 0 1px RGB(var(--now-form-field--border-color--focus,var(--now-color--secondary-1,1,119,142))),0 0 0 4px RGBA(var(--now-form-field--border-color--focus,var(--now-color--secondary-1,1,119,142)),.1);
			border-color: RGB(var(--now-form-field--border-color--focus,var(--now-color--secondary-1,1,119,142)));
			outline: 0;
		}
		.option input {
			width: 100%;
			height: 32px;
			border-radius: 4px;
			border: 1px solid #a1a1a1;
			padding: 0 7px;
		}
		.email_icon {
			border: 1px solid #838383;
			border-radius: 0 4px 4px 0;
			margin-left: -40px;
			padding: 6.5px 9px 5.5px;
			display: inline-block;
		}
		.email_icon span {
			padding-left: 4px;
		}
		.chip {
			padding: 10px 0;
			width: 100%;
		}
		.chip span {
			border: 1px solid #1b98dd;
			padding: 2px 10px;
			border-radius: 11px;
			margin: 3px;
			cursor: pointer;
		}
		.chip span.color {
			background: grey;
			border-radius: 100%;
			margin-right: -10px;
			margin-left: 6px;
			border: none;
		}
		span.new_version.app_version span {
			background: rgb(0 0 0 / 21%);
			padding: 3px 6px;
			margin-left: -8px;
			border-radius: 4px 0 0 4px;
			margin-right: 7px;
		}
		.credit p {
			text-align: center;
		}
		.credit .link {
			background: #cfe2f3;
			padding: 2px 6px;
			margin: 0 5px;
			border-radius: 4px;
			cursor: pointer;
		}
		.email_reply_to table {
			border: none;
			margin: 0;
			float: left;
			width: 99%;
		}
		.email_reply_to td#label\.email_reply_to {
			display: none;
		}
		.option .div_button {
			background-color: rgba(255, 255, 255, 0.45);
			color: RGB(var(--now-color--neutral-18,24,26,31));
			border: 1px solid RGB(var(--now-color--neutral-3,218,221,226));
			line-height: 1.42857;
			min-width: 2.25em;
			min-width: auto\9;
			min-height: 2.25em;
			min-height: auto\9;
			font-weight: normal;
			-moz-box-sizing: border-box;
			-webkit-box-sizing: border-box;
			box-sizing: border-box;
			-moz-border-radius: 3px;
			-webkit-border-radius: ;
			border-radius: 3px;
			cursor: pointer;
		}
		.new_version_check {
			padding: 60px 60px 45px 60px;
			text-align: center;
			color: #999999;
			font-weight: 600;
		}
		.option input.checkbox {
			height: 26px;
			width: 30px;
			margin-top: 3px;
			box-shadow: none;
		}
	</style>
	<div id="release_properties" style="margin:20px;">
		<div class="form-container">
			<g:ui_form>
				<header>
					<div class="title">
						<h4>Release Notification Properties</h4>
						<p>
							<g:evaluate>
								var rnu = new ReleaseNotificationUtils();
								var current_version = "1.0.0";
								var new_version = null; 
							</g:evaluate>
							
							<i>A simple way to manage and send release notifications</i> 
							<span class="current_version app_version" style="background: #1490eb;">v${current_version}</span>

							<j:if test="${new_version != null}">
								<span class="new_version app_version" style="background: #27c576;">
									<span>New</span> v${new_version}
								</span>
							</j:if>

						</p>
					</div>
					<div class="right-menu" style="float:right;margin-top:18px;">
						<button type="submit" onclick="onFormSave()" class="selected_action action_context btn btn-primary">Save</button>
					</div>
				</header>
				<main style="margin:auto; max-width: 768px;">	
					<div class="row">
					  <div class="col-sm-6 col-md-4" >
						
					  </div>
					</div>
					
					<div class="row">
						<div class="card">
							<div class="card-body">
								<h5 class="card-title">General</h5>
								<p class="card-text">
									<div class="option">
										<div class="email_template">
										<p> Release note types </p>
										<p><i>Update the release note type choice list.</i></p>
										</div>
										<div class="email_preview" >
																						
											<div class="right-menu" style="float:right;">
												<button onclick="releaseNoteList()" >Edit</button>
											</div>
																				
											<div class="right-menu" style="float:right;margin-right: 10px;">
												<button onclick="releaseNoteNew()">New</button>
											</div>
										</div>
											<g:evaluate>
												var rnt_values = [];
												var grRE = new GlideRecordSecure('sys_choice');
												grRE.addEncodedQuery('name=x_803596_release_0_release_notes');
												grRE.query();
												
												while (grRE.next()) {
													rnt_values.push(grRE.getDisplayValue());
												}

											</g:evaluate>
										<div id="rnt_chip" class="chip">
											<j:forEach var="jvar_rnt" items="${rnt_values}">
												<span>${jvar_rnt}</span>
											</j:forEach>
										</div>
									</div>
									
									<div class="option">
										<div class="email_template">
										<p> Note type color </p>
										<p><i>Assign colors to the release notes.</i></p>
										</div>
										<div class="email_preview" >								
											
											<div class="right-menu div_button" style="float:right;padding: 6px 9px;">
												<div onclick="releaseNoteUpdate()">Edit</div>
											</div>
										</div>
											<g:evaluate>
												var index = 0;
												var rnt_values = [];
												var note_types = [];
												var grRE = new GlideRecordSecure("sys_choice");
												grRE.addEncodedQuery("name=x_803596_release_0_release_notes");
												grRE.query();
												
												var rntc = gs.getProperty("x_803596_release_0.release_note_type_color");
												
												if (rntc.length > 0) {
													var rntc_values = JSON.parse(rntc);
													while (grRE.next()) {
														index++;
														if (grRE.value == rntc_values[index - 1].name) {
															rnt_values.push({
																name: grRE.getDisplayValue(),
																color: rntc_values[index - 1].color
															});
														} else {
															rnt_values.push({
																name: grRE.getDisplayValue(),
																color: "#eee"
															});
														}
												
														
													}	
												} else {
													while (grRE.next()) {
														rnt_values.push({
															name: grRE.getDisplayValue(),
															color: "#eee"
														});
													}	
												}

											</g:evaluate>
										<div id="rnt_chip" class="chip">
											<j:forEach var="jvar_rnt" items="${rnt_values}">
												<span>${jvar_rnt.name} <span class="color" style="background-color:${jvar_rnt.color}"></span></span>
											</j:forEach>
										</div>
									</div>
									
									<div class="option">
										<div class="email_template">
										<p> Catalog item </p>
										<p><i>Enable or disable the "New Release Notification" catalog item</i></p>
										</div>
										<div class="email_preview" >
										
											<div class="right-menu" style="float:right;">
												<button onclick="openCatalogItem()">Open</button>
											</div>
											
											<div class="right-menu" style="float:right;margin-right: 10px;">
												<input id="ci_checkbox" name="ci_checkbox" class="checkbox" type="checkbox" />
											</div>
										</div>
									</div>
									
									<div class="option">
										<div class="email_template">
										<p> Catalog item Available For</p>
										<p><i>User Criteria may be used to restrict access to Release Notification</i></p>
										</div>
										<div class="email_preview" >
											<div class="right-menu" style="float:right;">
												<button onclick="availableFor()">Edit</button>
											</div>
										</div>
									</div>
									
								</p>
							</div>
						</div>
					</div>
					
					<div class="row">
						<div class="card">
							<div class="card-body">
								<h5 class="card-title">Email Notification</h5>
								<p class="card-text">
									<div class="option">
										<p> Reply to (optional)</p>
										<p><i>Preferred email to receive the replies. (Default: system email)</i></p>
											<g:evaluate>
												var grRn = new ReleaseNotificationUtils();
												var ert_val = grRn.updateEmailTemplate("read", "0d52777c97a7a110c6d1b666f053afb1");
												var ert_value = gs.getProperty("x_803596_release_0.release_email_reply_to");
											</g:evaluate>
										<div class="email_reply_to">
											<g:ui_input_field name="email_reply_to" value="${ert_val}" />
											<span class="email_icon"><span class="icon icon-mail" aria-hidden="true"></span></span>
										</div>
									</div>
									<div class="option">
										<p> Email template <span style="color:red;"> *</span></p>
										<p><i>Select an email template.</i></p>
										<div class="email_template">
											<g:evaluate>
												var et_value="";
												var et_displayValue ="";
												var grET = new GlideRecordSecure("sysevent_email_template");
												if (grET.get(gs.getProperty("x_803596_release_0.release_email_template"))) {
													et_value = grET.getUniqueValue();
													et_displayValue = grET.name;
												}

												var emailRef = [et_value, et_displayValue];
											</g:evaluate>
											<g:ui_reference label="Email Template" name="email_template" table="sysevent_email_template" query="active=true" value="${emailRef[0]}" displayValue="${emailRef[1]}" mandatory="true"/>
										</div>
										<div class="email_preview" >
											<div class="right-menu" style="float:right;">
												<button type="submit" onclick="onEmailPreview()">Preview</button>
											</div>
										</div>
									</div>
								</p>
							</div>
						</div>
					</div>
					
					<!-- <div class="row">
						<div class="card">
							<div class="card-body">
								<h5 class="card-title">Update check</h5>
								<p class="card-text">
									<div class="option">
										<p> Current version </p>
										<p><i>Latest updates brings stability and new functionality</i></p>
										<div class="email_template">
											<span class="new_version app_version" style="background: #1490eb;">
												<span>Current</span> v${current_version}
											</span>
										</div>
										<div class="email_preview" >
											<div class="right-menu div_button" style="float:right;padding: 6px 9px;">
												<div onclick="newVersionCheck('${current_version}')">Check</div>
											</div>
										</div>
									</div>
									<div class="option">
										<div class="new_version_check">
											<g:evaluate>

											</g:evaluate>
											
											<j:if test="${new_version == null}">
												<div class="status">No update available</div>
											</j:if>
											
											<j:if test="${new_version != null}">
												<p><i>A new version is available</i></p>
												<span class="new_version app_version" style="background: #27c576;">
													<span>New</span> v${new_version}
												</span>
											</j:if>
										</div>
									</div>
								</p>
							</div>
						</div>
					</div> -->
					
					<div class="row credit">
						<p><i>Developed by 
							<span class="author link">
								<a href="https://linkedin.com/in/markensongilles" target="_blank">Markenson G.</a>
							</span> | 
							<span class="link">
								<a href="https://github.com/kenspy/sn_release_notification" target="_blank">GitHub</a>
							</span> | 
							<span class="link" >
								<a href="#" target="_blank">ServiceNow Community</a>
							</span></i>
						</p>
					</div>
				</main>
			</g:ui_form>
		</div>
	</div>

</j:jelly>]]></html>
        <name>properties</name>
        <processing_script><![CDATA[gs.setProperty('x_803596_release_0.release_email_reply_to', email_reply_to);
gs.setProperty('x_803596_release_0.release_email_template', email_template);
gs.setProperty("x_803596_release_0.release_note_type_color", rntc_props);
]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-18 15:20:33</sys_created_on>
        <sys_id>c2cd404d972ba110c6d1b666f053af27</sys_id>
        <sys_mod_count>368</sys_mod_count>
        <sys_name>properties</sys_name>
        <sys_package display_value="Release Notification" source="x_803596_release_0">4b83d29897e32110c6d1b666f053afd4</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Release Notification">4b83d29897e32110c6d1b666f053afd4</sys_scope>
        <sys_update_name>sys_ui_page_c2cd404d972ba110c6d1b666f053af27</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-14 00:07:11</sys_updated_on>
    </sys_ui_page>
</record_update>
